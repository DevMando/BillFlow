@page "/create-edit-bill"
@inject BillFlowContext BillFlowContext
@rendermode InteractiveServer
@using Radzen
@using Radzen.Blazor
@inject DialogService DialogService

<RadzenRow>
	<RadzenColumn Size="12">
		<RadzenLabel Text="Bill Name" />
		<RadzenTextBox @bind-Value="@Bill.Name" Name="Name" Style="width:100%" />
	</RadzenColumn>
	<RadzenColumn Size="12">
		<RadzenLabel Text="Description" />
		<RadzenTextBox @bind-Value="@Bill.Description" Name="Description" Style="width:100%" />
	</RadzenColumn>
</RadzenRow>

<RadzenRow style="margin-top:10px">
	<RadzenColumn Size="12">
		<RadzenLabel Text="Monthly Bill" />
		<RadzenCheckBox @bind-Value="@Bill.IsMonthy" Name="MonthlyBill" />
	</RadzenColumn>
</RadzenRow>

<RadzenRow style="margin-top:10px">
	<RadzenColumn Size="6">
		<RadzenLabel Text="Amount Due" />
		<RadzenNumeric @bind-Value="@Bill.AmountDue" Name="Amount Due" />
	</RadzenColumn>
	<RadzenColumn Size="6">
		<RadzenLabel Text="Due Date" />
		<RadzenDatePicker @bind-Value="@Bill.DueDate" Name="DueDate" DateFormat="MM/dd/yyy" />
	</RadzenColumn>
</RadzenRow>

<RadzenRow Style="margin-top:10px">
	<RadzenColumn Size="6">
		<RadzenLabel Text="Balance" />
		<RadzenNumeric @bind-Value="@Bill.Balance" Name="Balance" />
	</RadzenColumn>
</RadzenRow>

<RadzenStack style="margin-top:10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
	<RadzenButton Text="Save" Click="Save" Disabled="@(IsSaving || !ValidateNewBill())" ButtonStyle="ButtonStyle.Info" />
	<RadzenButton Text="Cancel" Click="() => DialogService.Close(false)" ButtonStyle="ButtonStyle.Light" />
</RadzenStack>



@code {

	[Parameter]
	public Bill? Bill { get; set; } = new Bill();
	protected bool IsSaving = false;

	protected async Task Save()
	{
		IsSaving = true;
		await Task.Yield();

		if(Bill.ID == 0){
			BillFlowContext.Bills.Add(Bill);
		}
		
		await BillFlowContext.SaveChangesAsync();

		IsSaving = false;
		DialogService.Close(true);
	}

	protected bool ValidateNewBill()
	{
		bool isValid = true;

		isValid = Bill is not null &&  Bill.DueDate is not null && Bill.AmountDue > 0;

		return isValid;
	}

}
